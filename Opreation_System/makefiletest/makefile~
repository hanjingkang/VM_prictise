
#把指定目录下的.c文件名集合赋值给src
src=$(wildcard  ./src/*.c) 
#对src集合中的文件名遍历操作，将.c变为.o文件，存于指定目录
obj=$(patsubst ./src/%.c,./obj/%.o,$(src))

#定义变量：头文件路径和gcc参数
inc_path=./inc
myargs= -Wall -g

#指定要生成的终极目标文件
ALL:a.out


#书写规则：
#目标文件：依赖文件
#	具体命令

#自动变量解释
#$@:在规则的命令中，表示规则中的目标文件
#$^:表示规则中的所有依赖文件
#$<:表示第一个依赖文件

#链接部分
#说明:将所有依赖文件链接成目标文件，并带上gcc参数
a.out:$(obj)
	gcc $^ -o $@ $(myargs)

#预处理部分，要指定头文件
#说明:
#先指定作用域，以$(obj)文件集为范围，将其中的.o文件作为目标，将指定目录的.#c文件作为依赖，进行编译，并且要指定头文件目录
$(obj):./obj/%.o:./src/%.c
	gcc -c $^ -o $@ $(myargs) -I $(inc_path)

#说明:执行make clean 命令，会删除obj文件机中的所有文件，和a.out文件
#其中 “-rm”中的“-”遇到不存在文件会跳过继续执行剩下的
clean:
	-rm -rf $(obj) a.out

#防止命令被相同名字的文件碰瓷，防止伪目标的功能
.PHONY: clean ALL

 
